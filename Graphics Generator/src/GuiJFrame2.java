import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author wbdwy
 */
public class GuiJFrame2 extends javax.swing.JFrame {
    /**
     * Creates new form GuiJFrame2
     */
    public GuiJFrame2() {
//        this.addEditLocationMode = 1;
//        this.locations.add(new Location("tester 1", 100, 100));
//        this.locations.add(new Location("tester 2", 200, 200));
//        this.currentLocation = 0;

        locationsNew = new ArrayList<Location>(0);
        this.locationsNew.add(new Location("testerr 1", 100, 100));
        this.locationsNew.add(new Location("testerr 2", 200, 200));
        this.currentLocationIndex = 0;
        
        
        initComponents();
        
        this.locationComboboxLocationSelector.addItem(this.locationsNew.get(0).getName());
        this.locationComboboxLocationSelector.addItem(this.locationsNew.get(1).getName());
        
        
//        this.comboboxLocationSelector.addItem(this.locations.get(0).getName());
//        this.comboboxLocationSelector.addItem(this.locations.get(1).getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        windowAddLocation = new javax.swing.JFrame();
        addLocationTextFieldName = new javax.swing.JTextField();
        addLocationLabelGraphicWidth = new javax.swing.JLabel();
        addLocationLabelGraphicHeight = new javax.swing.JLabel();
        addLocationTextFieldGraphicWidth = new javax.swing.JTextField();
        addLocationTextFieldGraphicHeight = new javax.swing.JTextField();
        addLocationButtonSave = new javax.swing.JButton();
        windowEditLocation = new javax.swing.JFrame();
        editLocationTextFieldName = new javax.swing.JTextField();
        editLocationLabeWidth = new javax.swing.JLabel();
        editLocationLabelHeight = new javax.swing.JLabel();
        editLocationTextFieldGraphicWidth = new javax.swing.JTextField();
        editLocationTextFieldGraphicHeight = new javax.swing.JTextField();
        editLocationButtonSave = new javax.swing.JButton();
        Footer = new javax.swing.JLabel();
        Tabs = new javax.swing.JTabbedPane();
        Main = new javax.swing.JPanel();
        GenerateGraphics = new javax.swing.JButton();
        ImportGraphics = new javax.swing.JButton();
        SaveGraphics = new javax.swing.JButton();
        SelectTxtFile = new javax.swing.JButton();
        Folders = new javax.swing.JPanel();
        Location = new javax.swing.JPanel();
        locationLabelCurrentLocation = new javax.swing.JLabel();
        locationComboboxLocationSelector = new javax.swing.JComboBox<>();
        locationLabelGraphicWidth = new javax.swing.JLabel();
        locationLabelGraphicHeight = new javax.swing.JLabel();
        locationButtonAddLocation = new javax.swing.JButton();
        locationButtonRemoveCurrentLocation = new javax.swing.JButton();
        locationButtonEditCurrentLocation = new javax.swing.JButton();
        buttonPrint = new javax.swing.JButton();
        ExternalSoftware = new javax.swing.JPanel();
        buttonUnlockDrive = new javax.swing.JButton();
        buttonOpenIgnite = new javax.swing.JButton();

        windowAddLocation.setTitle("Add Location");
        windowAddLocation.setMinimumSize(new java.awt.Dimension(190, 210));
        windowAddLocation.setResizable(false);

        addLocationTextFieldName.setText("Name");
        addLocationTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLocationTextFieldNameActionPerformed(evt);
            }
        });

        addLocationLabelGraphicWidth.setText("Graphic width:");

        addLocationLabelGraphicHeight.setText("Graphic height:");

        addLocationTextFieldGraphicWidth.setText("100");
        addLocationTextFieldGraphicWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLocationTextFieldGraphicWidthActionPerformed(evt);
            }
        });

        addLocationTextFieldGraphicHeight.setText("100");
        addLocationTextFieldGraphicHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLocationTextFieldGraphicHeightActionPerformed(evt);
            }
        });

        addLocationButtonSave.setText("Save");
        addLocationButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLocationButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout windowAddLocationLayout = new javax.swing.GroupLayout(windowAddLocation.getContentPane());
        windowAddLocation.getContentPane().setLayout(windowAddLocationLayout);
        windowAddLocationLayout.setHorizontalGroup(
            windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowAddLocationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addLocationTextFieldName)
                    .addGroup(windowAddLocationLayout.createSequentialGroup()
                        .addGroup(windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addLocationLabelGraphicWidth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addLocationLabelGraphicHeight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addLocationTextFieldGraphicWidth, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(addLocationTextFieldGraphicHeight))))
                .addContainerGap())
            .addGroup(windowAddLocationLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(addLocationButtonSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        windowAddLocationLayout.setVerticalGroup(
            windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowAddLocationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addLocationTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addLocationLabelGraphicWidth)
                    .addComponent(addLocationTextFieldGraphicWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(windowAddLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addLocationLabelGraphicHeight)
                    .addComponent(addLocationTextFieldGraphicHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addLocationButtonSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        windowEditLocation.setTitle("Edit Location");
        windowEditLocation.setMinimumSize(new java.awt.Dimension(214, 210));
        windowEditLocation.setResizable(false);

        editLocationTextFieldName.setText("Name");
        editLocationTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLocationTextFieldNameActionPerformed(evt);
            }
        });

        editLocationLabeWidth.setText("New graphic width:");

        editLocationLabelHeight.setText("New graphic height:");

        editLocationTextFieldGraphicWidth.setText("10");
        editLocationTextFieldGraphicWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLocationTextFieldGraphicWidthActionPerformed(evt);
            }
        });

        editLocationTextFieldGraphicHeight.setText("10");
        editLocationTextFieldGraphicHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLocationTextFieldGraphicHeightActionPerformed(evt);
            }
        });

        editLocationButtonSave.setText("Save");
        editLocationButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editLocationButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout windowEditLocationLayout = new javax.swing.GroupLayout(windowEditLocation.getContentPane());
        windowEditLocation.getContentPane().setLayout(windowEditLocationLayout);
        windowEditLocationLayout.setHorizontalGroup(
            windowEditLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowEditLocationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(windowEditLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editLocationTextFieldName)
                    .addGroup(windowEditLocationLayout.createSequentialGroup()
                        .addComponent(editLocationLabelHeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editLocationTextFieldGraphicHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(windowEditLocationLayout.createSequentialGroup()
                        .addComponent(editLocationLabeWidth)
                        .addGap(18, 18, 18)
                        .addComponent(editLocationTextFieldGraphicWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(windowEditLocationLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(editLocationButtonSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        windowEditLocationLayout.setVerticalGroup(
            windowEditLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(windowEditLocationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editLocationTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(windowEditLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editLocationLabeWidth)
                    .addComponent(editLocationTextFieldGraphicWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(windowEditLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editLocationLabelHeight)
                    .addComponent(editLocationTextFieldGraphicHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(editLocationButtonSave)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graphics Generator");

        Footer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Footer.setText("Current location: TODO FINISH THIS" +  "     ");
        Footer.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        BufferedImage imgGearIcon = null;
        try {
            imgGearIcon = ImageIO.read(new File("Images/Gear Icon.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimgGearIcon = imgGearIcon.getScaledInstance(30, 30, Image.SCALE_SMOOTH);
        ImageIcon imageIconGearIcon = new ImageIcon(dimgGearIcon);
        GenerateGraphics.setText("Generate graphics");
        GenerateGraphics.setToolTipText("Generate the graphics into the selected folder");
        GenerateGraphics.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GenerateGraphics.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GenerateGraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateGraphicsActionPerformed(evt);
            }
        });

        BufferedImage imgImportIcon = null;
        try {
            imgImportIcon = ImageIO.read(new File("Images/Play Icon.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimgImportIcon = imgImportIcon.getScaledInstance(30, 30, Image.SCALE_SMOOTH);
        ImageIcon imageIconImportIcon = new ImageIcon(dimgImportIcon);
        ImportGraphics.setText("Import graphics");
        ImportGraphics.setToolTipText("Start the automatic importing of graphics into Ignite");
        ImportGraphics.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ImportGraphics.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ImportGraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportGraphicsActionPerformed(evt);
            }
        });

        SaveGraphics.setText("Save graphics to...");
        SaveGraphics.setToolTipText("Select the folder to save graphics to");
        SaveGraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveGraphicsActionPerformed(evt);
            }
        });

        SelectTxtFile.setText("Select .txt file");
        SelectTxtFile.setToolTipText("Select the .txt file containing the band information");
        SelectTxtFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectTxtFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainLayout = new javax.swing.GroupLayout(Main);
        Main.setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GenerateGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SaveGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ImportGraphics, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectTxtFile, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GenerateGraphics)
                    .addComponent(ImportGraphics))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveGraphics)
                    .addComponent(SelectTxtFile))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        Tabs.addTab("Main", Main);

        javax.swing.GroupLayout FoldersLayout = new javax.swing.GroupLayout(Folders);
        Folders.setLayout(FoldersLayout);
        FoldersLayout.setHorizontalGroup(
            FoldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );
        FoldersLayout.setVerticalGroup(
            FoldersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 173, Short.MAX_VALUE)
        );

        Tabs.addTab("Folders", Folders);

        locationLabelCurrentLocation.setText("Current Location");

        locationComboboxLocationSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{}));
        locationComboboxLocationSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationComboboxLocationSelectorActionPerformed(evt);
            }
        });

        locationLabelGraphicWidth.setText("Graphic width");

        locationLabelGraphicHeight.setText("Graphic height");

        locationButtonAddLocation.setText("Add location");
        locationButtonAddLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationButtonAddLocationActionPerformed(evt);
            }
        });

        locationButtonRemoveCurrentLocation.setText("Remove current location");
        locationButtonRemoveCurrentLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationButtonRemoveCurrentLocationActionPerformed(evt);
            }
        });

        locationButtonEditCurrentLocation.setText("Edit current location");
        locationButtonEditCurrentLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationButtonEditCurrentLocationActionPerformed(evt);
            }
        });

        buttonPrint.setText("Print");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LocationLayout = new javax.swing.GroupLayout(Location);
        Location.setLayout(LocationLayout);
        LocationLayout.setHorizontalGroup(
            LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(locationLabelGraphicHeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(locationLabelGraphicWidth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(locationLabelCurrentLocation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locationButtonEditCurrentLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(locationComboboxLocationSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(locationButtonAddLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(locationButtonRemoveCurrentLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(buttonPrint)
                .addGap(36, 36, 36))
        );
        LocationLayout.setVerticalGroup(
            LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(locationComboboxLocationSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonPrint))
                    .addComponent(locationLabelCurrentLocation))
                .addGap(18, 18, 18)
                .addGroup(LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationLabelGraphicWidth)
                    .addComponent(locationButtonAddLocation))
                .addGap(18, 18, 18)
                .addGroup(LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationLabelGraphicHeight)
                    .addComponent(locationButtonRemoveCurrentLocation))
                .addGap(18, 18, 18)
                .addComponent(locationButtonEditCurrentLocation)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        Tabs.addTab("Location", Location);

        buttonUnlockDrive.setText("Unlock Drive");
        buttonUnlockDrive.setToolTipText("Unlock the hard drive using WD Drive Unlocker");
        buttonUnlockDrive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUnlockDriveActionPerformed(evt);
            }
        });

        buttonOpenIgnite.setText("Open Ignite");
        buttonOpenIgnite.setToolTipText("Open the Ignite OPx software");
        buttonOpenIgnite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpenIgniteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ExternalSoftwareLayout = new javax.swing.GroupLayout(ExternalSoftware);
        ExternalSoftware.setLayout(ExternalSoftwareLayout);
        ExternalSoftwareLayout.setHorizontalGroup(
            ExternalSoftwareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExternalSoftwareLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExternalSoftwareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonUnlockDrive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonOpenIgnite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        ExternalSoftwareLayout.setVerticalGroup(
            ExternalSoftwareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExternalSoftwareLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonUnlockDrive)
                .addGap(18, 18, 18)
                .addComponent(buttonOpenIgnite)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        Tabs.addTab("External Software", ExternalSoftware);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Footer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Footer))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * loads all past data into this object's local variables
     * 
     * ex: loads all past locations in
     * 
     */
    private void loadPastData() {
        
    }
    
    /**
     * sets this.current location to the current location that is selected
     */
    private int findCurrentLocation(String toFind) {
      for(int i = 0; i < this.locations.size(); i++) {
        if(this.locations.get(i).getName().equals(toFind)) {
          return i;
        }
      }
      return 0;
    }
    
    /**
     * updates the comboBox with the new, edited locations
     */
//    private void updateComboBox() {
//        this.comboboxLocationSelector.removeAllItems();
//        for(Location location : this.locations) {
//            this.comboboxLocationSelector.addItem(location.getName());
//        }
//    }
    
    private void SelectTxtFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectTxtFileActionPerformed
      System.out.println("select txt file clicked");
    }//GEN-LAST:event_SelectTxtFileActionPerformed

    private void SaveGraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveGraphicsActionPerformed
      System.out.println("save graphics clicked");
      JFileChooser chooser = new JFileChooser();
      chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      chooser.setAcceptAllFileFilterUsed(false);
    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
      System.out.println("getCurrentDirectory(): " 
         +  chooser.getCurrentDirectory());
      System.out.println("getSelectedFile() : " 
         +  chooser.getSelectedFile());
      }
/*
      FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG & GIF Images", "jpg", "gif");
      chooser.setFileFilter(filter);
      int returnVal = chooser.showOpenDialog(Main);
      if(returnVal == JFileChooser.APPROVE_OPTION) {
       System.out.println("You chose to open this file: " +
            chooser.getSelectedFile().getName());
    }*/
    }//GEN-LAST:event_SaveGraphicsActionPerformed

    private void ImportGraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportGraphicsActionPerformed
      System.out.println("import graphics clicked");
    }//GEN-LAST:event_ImportGraphicsActionPerformed

    private void GenerateGraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateGraphicsActionPerformed
      System.out.println("generate graphics clicked");
    }//GEN-LAST:event_GenerateGraphicsActionPerformed

    private void buttonUnlockDriveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUnlockDriveActionPerformed
      Desktop desktop = null;    
      try {
        if (Desktop.isDesktopSupported()) {
          desktop = Desktop.getDesktop();
        }
        desktop.open(new File("C:\\Users\\wbdwy\\Desktop\\Unlock.lnk"));
      } catch (IOException e) {      
        JOptionPane.showMessageDialog(null, "There was an error running WD Drive Unlock", "Unlock Drive Error", 2);
      }
    }//GEN-LAST:event_buttonUnlockDriveActionPerformed

    private void buttonOpenIgniteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpenIgniteActionPerformed
      Desktop desktop = null;    
      try {
        if (Desktop.isDesktopSupported()) {
          desktop = Desktop.getDesktop();
        }
        desktop.open(new File("C:\\Program Files\\Ignite12\\Ignite_x64.exe"));
      } catch (IOException e) {      
        JOptionPane.showMessageDialog(null, "There was an error opening Ignite", "Open Ignite Error", 2);
      } catch (RuntimeException e) {
        JOptionPane.showMessageDialog(null, "There was an error opening Ignite", "Open Ignite Error", 2);

      }
    }//GEN-LAST:event_buttonOpenIgniteActionPerformed

    private void locationButtonAddLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationButtonAddLocationActionPerformed
      windowAddLocation.setLocation(this.getX() + 50, this.getY() + 50);
      windowAddLocation.setVisible(true);
    }//GEN-LAST:event_locationButtonAddLocationActionPerformed

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        System.out.println("Locations:");
        for(Location location : locationsNew)
            System.out.println("locations: " + location);
        System.out.println("current location: " + this.currentLocationIndex + "\n");
        
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void locationComboboxLocationSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationComboboxLocationSelectorActionPerformed
        this.locationNewFindCurrentLocation();
        this.Footer.setText("Current location: " + this.locationsNew.get(this.currentLocationIndex).getName() + "     ");
        locationLabelGraphicWidth.setText("Width: " + this.locationsNew.get(this.currentLocationIndex).getGraphicWidth());
        locationLabelGraphicHeight.setText("Height: " + this.locationsNew.get(this.currentLocationIndex).getGraphicHeight());

    }//GEN-LAST:event_locationComboboxLocationSelectorActionPerformed

    private void addLocationButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLocationButtonSaveActionPerformed
        if(this.locationNameTaken(addLocationTextFieldName.getText())) {
            JOptionPane.showMessageDialog(null, "This name is already being used. Please enter a new name", "Add Error", 2);
        } else {    
            try {
                this.locationsNew.add(new Location(addLocationTextFieldName.getText(), Integer.parseInt(addLocationTextFieldGraphicWidth.getText()), Integer.parseInt(addLocationTextFieldGraphicHeight.getText())));
                //this.currentLocationIndex = this.locationsNew.size()-1;
                this.locationComboboxLocationSelector.addItem(this.locationsNew.get(this.locationsNew.size()-1).getName());
                addLocationTextFieldName.setText("Name");
                addLocationTextFieldGraphicWidth.setText("100");
                addLocationTextFieldGraphicHeight.setText("100");
                windowAddLocation.dispose();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please enter numeric values for width and height", "Add error", 2);
            }
        }
    }//GEN-LAST:event_addLocationButtonSaveActionPerformed

    private void locationButtonEditCurrentLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationButtonEditCurrentLocationActionPerformed
        windowEditLocation.setLocation(this.getX() + 50, this.getY() + 50);
        windowEditLocation.setVisible(true);
        editLocationTextFieldName.setText(this.locationsNew.get(this.currentLocationIndex).getName());
        editLocationTextFieldGraphicWidth.setText(Integer.toString(this.locationsNew.get(this.currentLocationIndex).getGraphicWidth()));
        editLocationTextFieldGraphicHeight.setText(Integer.toString(this.locationsNew.get(this.currentLocationIndex).getGraphicHeight()));
    }//GEN-LAST:event_locationButtonEditCurrentLocationActionPerformed

    private void locationButtonRemoveCurrentLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationButtonRemoveCurrentLocationActionPerformed
        if(this.locationsNew.size() == 1) {
            JOptionPane.showMessageDialog(null, "Please add another location before removing this one", "Remove Error", 2);
        } else {
            this.locationsNew.remove(this.currentLocationIndex);
            this.currentLocationIndex = 0;
            this.updateComboboxNew();
        }
    }//GEN-LAST:event_locationButtonRemoveCurrentLocationActionPerformed

    private void editLocationTextFieldGraphicWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editLocationTextFieldGraphicWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editLocationTextFieldGraphicWidthActionPerformed

    private void editLocationTextFieldGraphicHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editLocationTextFieldGraphicHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editLocationTextFieldGraphicHeightActionPerformed

    private void addLocationTextFieldGraphicWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLocationTextFieldGraphicWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addLocationTextFieldGraphicWidthActionPerformed

    private void addLocationTextFieldGraphicHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLocationTextFieldGraphicHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addLocationTextFieldGraphicHeightActionPerformed

    private void editLocationButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editLocationButtonSaveActionPerformed
         try {
            this.locationsNew.get(this.currentLocationIndex).setName(editLocationTextFieldName.getText());
            this.locationsNew.get(this.currentLocationIndex).setGraphicWidth(Integer.parseInt(editLocationTextFieldGraphicWidth.getText()));
            this.locationsNew.get(this.currentLocationIndex).setGraphicHeight(Integer.parseInt(editLocationTextFieldGraphicHeight.getText()));
            
            this.currentLocationIndex = 0;
            this.updateComboboxNew();
            
            editLocationTextFieldName.setText("Name");
            editLocationTextFieldGraphicWidth.setText("100");
            editLocationTextFieldGraphicHeight.setText("100");                
            
            windowEditLocation.dispose();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter numeric values for width and height", "Add error", 2);
        }
    }//GEN-LAST:event_editLocationButtonSaveActionPerformed

    private void addLocationTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    
    private void editLocationTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    
    /**
     * After a location has been removed or edited, this method updates the combobox with the new names of the remaining Locations
     */
    private void updateComboboxNew() {
        this.locationComboboxLocationSelector.removeAllItems();
        for(Location l : this.locationsNew) {
            this.locationComboboxLocationSelector.addItem(l.getName());
        }
    }
    
    /**
     * Determines if the location name (passed as parameter) is already being used
     * 
     * @param name - the name to check if a location already has that name
     * @return true if the location name is taken, and false otherwise
     */
    private boolean locationNameTaken(String name) {
        for(Location l : this.locationsNew)
            if(l.getName().equals(name)) return true;
        
        return false;
    }
    
    /**
     * Finds the current location by finding the Location object in the locationsNew array that
     * has the same name as the currently selected name in the locationsNewComboboxLocationSelector
     */
    private void locationNewFindCurrentLocation() {
        for(int i = 0; i < this.locationsNew.size(); i++) {
            if(locationsNew.get(i).getName().equals(locationComboboxLocationSelector.getSelectedItem())) {
                this.currentLocationIndex = i;
                return;
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
      try {
        UIManager.setLookAndFeel(new FlatMacDarkLaf());
      } catch (UnsupportedLookAndFeelException ex) {
        Logger.getLogger(GuiJFrame2.class.getName()).log(Level.SEVERE, null, ex);
      }
      /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiJFrame2().setVisible(true);
            }
        });
    }
    
    
    
    
    
    private ArrayList<Location> locationsNew;
    private int currentLocationIndex;
    
    
    
    private ArrayList<Location> locations = new ArrayList<Location>(0);
    private int currentLocation;
    private int addEditLocationMode; // 1 for addition mode, 2 for edit mode
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ExternalSoftware;
    private javax.swing.JPanel Folders;
    private javax.swing.JLabel Footer;
    private javax.swing.JButton GenerateGraphics;
    private javax.swing.JButton ImportGraphics;
    private javax.swing.JPanel Location;
    private javax.swing.JPanel Main;
    private javax.swing.JButton SaveGraphics;
    private javax.swing.JButton SelectTxtFile;
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JButton addLocationButtonSave;
    private javax.swing.JLabel addLocationLabelGraphicHeight;
    private javax.swing.JLabel addLocationLabelGraphicWidth;
    private javax.swing.JTextField addLocationTextFieldGraphicHeight;
    private javax.swing.JTextField addLocationTextFieldGraphicWidth;
    private javax.swing.JTextField addLocationTextFieldName;
    private javax.swing.JButton buttonOpenIgnite;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JButton buttonUnlockDrive;
    private javax.swing.JButton editLocationButtonSave;
    private javax.swing.JLabel editLocationLabeWidth;
    private javax.swing.JLabel editLocationLabelHeight;
    private javax.swing.JTextField editLocationTextFieldGraphicHeight;
    private javax.swing.JTextField editLocationTextFieldGraphicWidth;
    private javax.swing.JTextField editLocationTextFieldName;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton locationButtonAddLocation;
    private javax.swing.JButton locationButtonEditCurrentLocation;
    private javax.swing.JButton locationButtonRemoveCurrentLocation;
    private javax.swing.JComboBox<String> locationComboboxLocationSelector;
    private javax.swing.JLabel locationLabelCurrentLocation;
    private javax.swing.JLabel locationLabelGraphicHeight;
    private javax.swing.JLabel locationLabelGraphicWidth;
    private javax.swing.JFrame windowAddLocation;
    private javax.swing.JFrame windowEditLocation;
    // End of variables declaration//GEN-END:variables
}
